#EXPLORATORY DATA ANALYSIS (EDA)

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# Replace 'path_to_file.csv' with the path to your dataset
df = pd.read_csv('C:\\Users\\mohit\\OneDrive\\Documents\\Desktop\\data analyst\\insurance.csv')

print(df.head())
print(df.shape)
print(df.info())
print(df.describe())
print(df.isnull().sum())
# Example: Fill missing values or drop them
df = df.dropna()  # or df.fillna(value)
print(df.duplicated().sum())
plt.figure(figsize=(10, 5))
sns.histplot(df['age'], kde=True, bins=30)
plt.title('Distribution of Age')
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.show()
plt.figure(figsize=(10, 5))
sns.histplot(df['bmi'], kde=True, bins=30)
plt.title('Distribution of BMI')
plt.xlabel('BMI')
plt.ylabel('Frequency')
plt.show()
plt.figure(figsize=(10, 5))
sns.histplot(df['charges'], kde=True, bins=30)
plt.title('Distribution of Charges')
plt.xlabel('Charges')
plt.ylabel('Frequency')
plt.show()
plt.figure(figsize=(8, 4))
sns.countplot(x='sex', data=df)
plt.title('Count of Sex')
plt.xlabel('Sex')
plt.ylabel('Count')
plt.show()
plt.figure(figsize=(8, 4))
sns.countplot(x='smoker', data=df)
plt.title('Count of Smokers vs Non-Smokers')
plt.xlabel('Smoker')
plt.ylabel('Count')
plt.show()
plt.figure(figsize=(10, 5))
sns.countplot(x='region', data=df)
plt.title('Count of Each Region')
plt.xlabel('Region')
plt.ylabel('Count')
plt.show()
plt.figure(figsize=(10, 6))
sns.scatterplot(x='age', y='charges', data=df)
plt.title('Age vs Charges')
plt.xlabel('Age')
plt.ylabel('Charges')
plt.show()
plt.figure(figsize=(10, 6))
sns.scatterplot(x='bmi', y='charges', data=df)
plt.title('BMI vs Charges')
plt.xlabel('BMI')
plt.ylabel('Charges')
plt.show()
plt.figure(figsize=(10, 6))
sns.boxplot(x='smoker', y='charges', data=df)
plt.title('Charges by Smoker Status')
plt.xlabel('Smoker')
plt.ylabel('Charges')
plt.show()
plt.figure(figsize=(10, 8))
corr_matrix = df[['age', 'bmi', 'children', 'charges']].corr()
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt='.2f')
plt.title('Correlation Heatmap')
plt.show()

